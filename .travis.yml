language:
    - cpp

os:
  - linux
  - osx

compiler:
    - clang
    - gcc

matrix:
  allow_failures:
    - os: osx
  include:
    - os: linux
      dist: trusty
      sudo: required
    - os: osx

env:
    global:
        - secure: "aniUHYHxhL+P0wddpW5zkZE5NEPD+BKwb7FN2TojQ4q2dZ6U3bJwsm/iyhrj+/d6gtde8pWUuRLEQ9aGf2Zoxn7uahjgPCnFGskGtOV+vpDlvWl4wXioEYdom+ztHd2MDCeA2mFjRCo923IWEbLmMnx6lSlyNLcmVi+CHU/Hm0o="
    matrix:
        - BUILD_EXAMPLES="ON" BUILD_TESTS="ON" CMAKE_BUILD_TYPE="Release" HTTPP_PARSER_BACKEND=Ragel USE_BOOST_PROMISE=ON
        - BUILD_EXAMPLES="ON" BUILD_TESTS="ON" CMAKE_BUILD_TYPE="Debug"   HTTPP_PARSER_BACKEND=Ragel USE_BOOST_PROMISE=ON
        - BUILD_EXAMPLES="ON" BUILD_TESTS="ON" CMAKE_BUILD_TYPE="Release" HTTPP_PARSER_BACKEND=Stream USE_BOOST_PROMISE=ON
        - BUILD_EXAMPLES="ON" BUILD_TESTS="ON" CMAKE_BUILD_TYPE="Debug"   HTTPP_PARSER_BACKEND=Stream USE_BOOST_PROMISE=ON
        - BUILD_EXAMPLES="ON" BUILD_TESTS="ON" CMAKE_BUILD_TYPE="Release" HTTPP_PARSER_BACKEND=Ragel USE_BOOST_PROMISE=OFF
        - BUILD_EXAMPLES="ON" BUILD_TESTS="ON" CMAKE_BUILD_TYPE="Debug"   HTTPP_PARSER_BACKEND=Ragel USE_BOOST_PROMISE=OFF
        - BUILD_EXAMPLES="ON" BUILD_TESTS="ON" CMAKE_BUILD_TYPE="Release" HTTPP_PARSER_BACKEND=Stream USE_BOOST_PROMISE=OFF
        - BUILD_EXAMPLES="ON" BUILD_TESTS="ON" CMAKE_BUILD_TYPE="Debug"   HTTPP_PARSER_BACKEND=Stream USE_BOOST_PROMISE=OFF

addons:
    apt:
        packages:
            - clang-3.6
            - g++-4.8
            - libboost-all-dev
            - libssl-dev
            - libtbb-dev
            - cmake
            - libcurl4-openssl-dev
            - libhwloc-dev

before_install:
    - git submodule update --init --recursive
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew tap homebrew/science && brew update ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install tbb hwloc; fi

before_script:
    # update compilers
    - if [ "$TRAVIS_OS_NAME" != "osx" && "${CXX}" == "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
    - if [ "$TRAVIS_OS_NAME" != "osx" && "${CXX}" == "clang++" ]; then export CXX="clang++-3.6" CC="clang-3.6"; fi

script:
    - rm -rf build
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DUSE_BOOST_PROMISE=${USE_BOOST_PROMISE} -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS} -DBUILD_TESTS=${BUILD_TESTS} -DBUILD_EXAMPLES=${BUILD_EXAMPLES} -DHTTPP_PARSER_BACKEND=${HTTPP_PARSER_BACKEND} ..
    - make VERBOSE=1
    - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then make test || cat Testing/Temporary/LastTest.log ; fi
    - make package

#addons:
#  coverity_scan:
#    project:
#      name: "daedric/httpp"
#      description: "Micro HTTP server/client"
#    notification_email: thomas.sanchz@gmail.com
#    build_command_prepend: "make cmake"
#    build_command:   "make -C build"
#    branch_pattern:  master
